@using System.Security.Claims
@model UserManagementViewModel

@{
    ViewData["Title"] = "User Management";
    var currentUserId = int.Parse(User.FindFirst(ClaimTypes.NameIdentifier)?.Value ?? "0");
}

<div class="bg-white shadow sm:rounded-lg">
    <div class="px-4 py-5 sm:p-6">
        <div class="sm:flex sm:items-center">
            <div class="sm:flex-auto">
                <h1 class="text-xl font-semibold text-gray-900">Users</h1>
                <p class="mt-2 text-sm text-gray-700">A list of all users in the system including their name, role, and department.</p>
            </div>
            <div class="mt-4 sm:mt-0 sm:ml-16 sm:flex-none space-x-4">
                <!-- Add User Button -->
                <a href="@Url.Action("Create")" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700">
                    Add User
                </a>
                <!-- Download Template Button -->
                <a href="@Url.Action("DownloadTemplate")" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700">
                    Download Template
                </a>
            </div>
        </div>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="mt-4 p-4 bg-green-100 text-green-700 rounded-md">
                @TempData["SuccessMessage"]
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="mt-4 p-4 bg-red-100 text-red-700 rounded-md">
                @TempData["Error"]
            </div>
        }

        <!-- Upload Form -->
        <div class="mt-6 border-t border-gray-200 pt-6">
            <form asp-action="UploadUsers" method="post" enctype="multipart/form-data" class="space-y-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700">Upload Users Excel File</label>
                    <div class="mt-1 flex items-center space-x-4">
                        <input name="file" type="file" accept=".xlsx,.xls" class="block w-full text-sm text-gray-500
                            file:mr-4 file:py-2 file:px-4
                            file:rounded-md file:border-0
                            file:text-sm file:font-semibold
                            file:bg-blue-50 file:text-blue-700
                            hover:file:bg-blue-100" />
                        <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700">
                            Upload
                        </button>
                    </div>
                </div>
            </form>
        </div>

        <!-- Users Table -->
        <div class="mt-8 flex flex-col">
            <div class="-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8">
                <div class="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
                    <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg">
                        <table class="min-w-full divide-y divide-gray-300">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6">User</th>
                                    <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Email</th>
                                    <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Role</th>
                                    <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Department</th>
                                    <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6">
                                        <span class="sr-only">Actions</span>
                                    </th>
                                </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-200 bg-white">
                                @foreach (var user in Model.Users)
                                {
                                    <tr>
                                        <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm sm:pl-6">
                                            <div class="flex items-center">
                                                <div class="h-10 w-10 flex-shrink-0">
                                                    <img class="h-10 w-10 rounded-full object-cover"
                                                         src="@(string.IsNullOrEmpty(user.ProfileImagePath) ? "/images/default-profile.png" : user.ProfileImagePath)"
                                                         alt="Profile" />
                                                </div>
                                                <div class="ml-4">
                                                    <div class="font-medium text-gray-900">@user.FullName</div>
                                                    <div class="text-gray-500">@user.Username</div>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.Email</td>
                                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.Role</td>
                                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.DepartmentAndFaculty</td>
                                        <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
                                            <a href="@Url.Action("Edit", new { id = user.Id })" class="text-blue-600 hover:text-blue-900 mr-4">Edit</a>
                                            @if (user.Id != currentUserId)
                                            {
                                                <form asp-action="DeleteUser" asp-route-id="@user.Id" method="post" class="inline"
                                                      onsubmit="return confirm('Are you sure you want to delete this user?');">
                                                    <button type="submit" class="text-red-600 hover:text-red-900">Delete</button>
                                                </form>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <div class="mt-4 mb-2 px-4 flex items-center justify-between">
                            <div class="flex-1 flex justify-between sm:hidden">
                                @if (Model.Pagination.HasPreviousPage)
                                {
                                    <a href="@Url.Action("Index", new { page = Model.Pagination.CurrentPage - 1 })"
                                       class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                                        Previous
                                    </a>
                                }
                                @if (Model.Pagination.HasNextPage)
                                {
                                    <a href="@Url.Action("Index", new { page = Model.Pagination.CurrentPage + 1 })"
                                       class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                                        Next
                                    </a>
                                }
                            </div>
                            <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                                <div>
                                    <p class="text-sm text-gray-700">
                                        Showing
                                        <span class="font-medium">@((Model.Pagination.CurrentPage - 1) * Model.Pagination.PageSize + 1)</span>
                                        to
                                        <span class="font-medium">@Math.Min(Model.Pagination.CurrentPage * Model.Pagination.PageSize, Model.Pagination.TotalItems)</span>
                                        of
                                        <span class="font-medium">@Model.Pagination.TotalItems</span>
                                        results
                                    </p>
                                </div>
                                <div>
                                    <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                                        @if (Model.Pagination.HasPreviousPage)
                                        {
                                            <a href="@Url.Action("Index", new { page = Model.Pagination.CurrentPage - 1 })"
                                               class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                                <span class="sr-only">Previous</span>
                                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                                                </svg>
                                            </a>
                                        }

                                        @{
                                            var startPage = Math.Max(1, Model.Pagination.CurrentPage - 2);
                                            var endPage = Math.Min(Model.Pagination.TotalPages, startPage + 4);
                                            startPage = Math.Max(1, endPage - 4);
                                        }

                                        @for (var i = startPage; i <= endPage; i++)
                                        {
                                            <a href="@Url.Action("Index", new { page = i })"
                                               class="@(i == Model.Pagination.CurrentPage
                           ? "z-10 bg-blue-50 border-blue-500 text-blue-600 relative inline-flex items-center px-4 py-2 border text-sm font-medium"
                           : "bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium")">
                                                @i
                                            </a>
                                        }

                                        @if (Model.Pagination.HasNextPage)
                                        {
                                            <a href="@Url.Action("Index", new { page = Model.Pagination.CurrentPage + 1 })"
                                               class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                                <span class="sr-only">Next</span>
                                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                                                </svg>
                                            </a>
                                        }
                                    </nav>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
